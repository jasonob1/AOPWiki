getwd() # View current working directory
workingDir<- getwd()
library("aop") # Used for converting cytoscape files to graph objects
library(graph)
library(igraph)
library(readr)
library(plotrix)
#### SECTION 1: LOAD PACKAGES, SET DIRECTORIES, AND LOAD CUSTOM AOP FUNCTIONS ####
## Load packages
library("aop") # Used for converting cytoscape files to graph objects
library(graph)
library(igraph)
library(readr)
library(plotrix)
## Set working directory
getwd() # View current working directory
workingDir<-paste(getwd(),"/",sep="") #specifies working directory as current directory, can be modified to set working directory explicitly.
setwd(workingDir)
## Load custom AOP function file
source(paste(workingDir,"AOPn_supplementary_functions.R",sep="")) #imports custom functions
#### SECTION 2: IMPORT AND FORMAT AOP NETWORK FILE ####
# Name the AOP network (you specify the name, it is used in titles for plots and output files)
AOP.name<-"Thyroid"
# Specify import files (loads from working directory)
importnetwork<-"thyroid_AOPn.cyjs"
importnetattr<-"thyroid_AOPn_data.csv"
#Import network as cytoscape object and turn in aop object
AOP_net<-convert_cytoscape_to_aop(paste(workingDir,importnetwork,sep=""))
#Import additional data exported from cytoscape, including node names and event types
AOP_data<- read_csv(paste(workingDir,importnetattr,sep=""))
#convert aop object to graphNEL object
AOP_graph <- convert_aop_to_graph(AOP_net)
#convert graphNEL object to igraph object for analysis using igraph package
AOP<-igraph.from.graphNEL(AOP_graph, name = TRUE, weight = TRUE,
unlist.attrs = TRUE)
#### Section 3: ASSIGN NAMES, ATTRIBUTES, AND NODE COLORS BY KED ####
## Assigning names can be tricky, since it depends on how cytoscape exports the network .json file
## Assign names to igraph object. The SUID attribute of the .json file is used to match the $name attributed created by default in section 1
V(AOP)$name<-AOP_data$name[match(V(AOP)$name,as.character(AOP_data$SUID))]
## Assign key event designator types (MIE,AO,KE,etc...) and the AOPwiki Key Event ID as attributes
V(AOP)$ked<-AOP_data$`Event Type`[match(V(AOP)$name,as.character(AOP_data$name))]
V(AOP)$KE_ID<-AOP_data$KE_ID[match(V(AOP)$name,as.character(AOP_data$name))]
## Remove comments to view the attributes just assigned
# V(AOP)$ked
# V(AOP)$KE_ID
## Assigns edge color as gray and node colors according to key event designator (MIE,KE,AO)
E(AOP)$color<-"gray"
V(AOP)$color<-"Yellow"
V(AOP)$color[which(V(AOP)$ked=="MIE")]<-"Green"
V(AOP)$color[which(V(AOP)$ked=="AO")]<-"Red"
#### Section 4: NETWORK PLOTS ####
## Creates and export plot of AOP network with KED coloring
set.seed(2)
plot(AOP, edge.arrow.size=.25, edge.curved=.1, vertex.size=10, main=paste(AOP.name,"AOP Network"),layout=layout.davidson.harel(AOP), vertex.label.cex=.75, vertex.label=NA, edge.curved=T )
legend('topleft',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
# Set jpeg output attributes
jpeg(filename = paste("AOP_",AOP.name,"_plot.jpeg"),
width = 800, height = 800, units = "px", pointsize = 12,
quality = 75)
set.seed(3)
plot(AOP, edge.arrow.size=.25, edge.curved=.1, vertex.size=10, main=paste(AOP.name,"AOP Network"),layout=layout.davidson.harel(AOP), vertex.label=NA)
legend('bottomleft',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
dev.off()
## Create and export plot of AOP network with topological sorting
is.dag(AOP) # is.dag() reports TRUE for DAG, FALSE if cycles exist
## Plot network with topological sort
dev.off()
par(mar=c(5,1,5,5)) # Attn: margin sizes may need to be adjusted for plots
plot(AOP, layout=topo.layout(AOP), edge.arrow.size=.25, edge.curved=1, vertex.size=5, edge.width=1.5, edge.color="Gray", vertex.label.degree=0, vertex.label.dist=.75, main=paste(AOP.name," AOP Network - Topological Ordering"), vertex.label=paste(strtrim(V(AOP)$name,35),"...",sep=""))
legend('bottomright',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
## Export plot as JPEG
par(mar=c(5,1,5,5)) # Attn: margin sizes may need to be adjusted for plots
jpeg(filename = paste("AOP_",AOP.name,"_topo_plot_NP.jpeg"),
width = 1000, height = 800, units = "px", pointsize = 12,
quality = 75)
plot(AOP, layout=topo.layout(AOP), edge.arrow.size=.25, edge.curved=1, vertex.size=5, edge.width=1.5, edge.color="Gray", vertex.label.degree=0, vertex.label.dist=.75, main=paste(AOP.name," AOP Network - Topological Sorting"), vertex.label=paste(strtrim(V(AOP)$name,35),"...",sep="") )
legend('bottomright',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
dev.off()
#### Section 4: NETWORK PLOT KED####
## Creates and export plot of AOP network with KED coloring
set.seed(2)
plot(AOP, edge.arrow.size=.25, edge.curved=.1, vertex.size=10, main=paste(AOP.name,"AOP Network"),layout=layout.davidson.harel(AOP), vertex.label.cex=.75, vertex.label=NA, edge.curved=T )
legend('topleft',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
# Set jpeg output attributes
jpeg(filename = paste("AOP_",AOP.name,"_plot.jpeg"),
width = 800, height = 800, units = "px", pointsize = 12,
quality = 75)
set.seed(3)
plot(AOP, edge.arrow.size=.25, edge.curved=.1, vertex.size=10, main=paste(AOP.name,"AOP Network"),layout=layout.davidson.harel(AOP), vertex.label=NA)
legend('bottomleft',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
dev.off()
#### SECTION 5: NETWORK PLOT WITH TOPOLOGICAL SORT
## Create and export plot of AOP network with topological sorting
is.dag(AOP) # is.dag() reports TRUE for DAG, FALSE if cycles exist
## Plot network with topological sort
dev.off()
par(mar=c(5,1,5,5)) # Attn: margin sizes may need to be adjusted for plots
plot(AOP, layout=topo.layout(AOP), edge.arrow.size=.25, edge.curved=1, vertex.size=5, edge.width=1.5, edge.color="Gray", vertex.label.degree=0, vertex.label.dist=.75, main=paste(AOP.name," AOP Network - Topological Ordering"), vertex.label=paste(strtrim(V(AOP)$name,35),"...",sep=""))
legend('bottomright',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
## Export plot as JPEG
par(mar=c(5,1,5,5)) # Attn: margin sizes may need to be adjusted for plots
jpeg(filename = paste("AOP_",AOP.name,"_topo_plot_NP.jpeg"),
width = 1000, height = 800, units = "px", pointsize = 12,
quality = 75)
plot(AOP, layout=topo.layout(AOP), edge.arrow.size=.25, edge.curved=1, vertex.size=5, edge.width=1.5, edge.color="Gray", vertex.label.degree=0, vertex.label.dist=.75, main=paste(AOP.name," AOP Network - Topological Sorting"), vertex.label=paste(strtrim(V(AOP)$name,35),"...",sep="") )
legend('bottomright',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
dev.off()
#### Section 4: NETWORK PLOT KED####
## Creates and export plot of AOP network with KED coloring
set.seed(2)
plot(AOP, edge.arrow.size=.25, edge.curved=.1, vertex.size=10, main=paste(AOP.name,"AOP Network"),layout=layout.davidson.harel(AOP), vertex.label.cex=.75, vertex.label=NA, edge.curved=T )
legend('topleft',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
# Set jpeg output attributes
jpeg(filename = paste("AOP_",AOP.name,"_plot.jpeg"),
width = 800, height = 800, units = "px", pointsize = 12,
quality = 75)
set.seed(3)
plot(AOP, edge.arrow.size=.25, edge.curved=.1, vertex.size=10, main=paste(AOP.name,"AOP Network"),layout=layout.davidson.harel(AOP), vertex.label=NA)
legend('bottomleft',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
dev.off()
#### SECTION 5: NETWORK PLOT WITH TOPOLOGICAL SORT
## Create and export plot of AOP network with topological sorting
is.dag(AOP) # is.dag() reports TRUE for DAG, FALSE if cycles exist
## Plot network with topological sort
dev.off()
par(mar=c(5,1,5,5)) # Attn: margin sizes may need to be adjusted for plots
plot(AOP, layout=topo.layout(AOP), edge.arrow.size=.25, edge.curved=1, vertex.size=5, edge.width=1.5, edge.color="Gray", vertex.label.degree=0, vertex.label.dist=.75, main=paste(AOP.name," AOP Network - Topological Ordering"), vertex.label=paste(strtrim(V(AOP)$name,35),"...",sep=""))
legend('bottomright',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
## Export plot as JPEG
par(mar=c(5,1,5,5)) # Attn: margin sizes may need to be adjusted for plots
jpeg(filename = paste("AOP_",AOP.name,"_topo_plot_NP.jpeg"),
width = 1000, height = 800, units = "px", pointsize = 12,
quality = 75)
plot(AOP, layout=topo.layout(AOP), edge.arrow.size=.25, edge.curved=1, vertex.size=5, edge.width=1.5, edge.color="Gray", vertex.label.degree=0, vertex.label.dist=.75, main=paste(AOP.name," AOP Network - Topological Sorting"), vertex.label=paste(strtrim(V(AOP)$name,35),"...",sep="") )
legend('bottomright',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
dev.off()
#### Section 4: NETWORK PLOT KED####
## Creates and export plot of AOP network with KED coloring
set.seed(2)
plot(AOP, edge.arrow.size=.25, edge.curved=.1, vertex.size=10, main=paste(AOP.name,"AOP Network"),layout=layout.davidson.harel(AOP), vertex.label.cex=.75, vertex.label=NA, edge.curved=T )
legend('topleft',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
# Set jpeg output attributes
jpeg(filename = paste("AOP_",AOP.name,"_plot.jpeg"),
width = 800, height = 800, units = "px", pointsize = 12,
quality = 75)
set.seed(3)
plot(AOP, edge.arrow.size=.25, edge.curved=.1, vertex.size=10, main=paste(AOP.name,"AOP Network"),layout=layout.davidson.harel(AOP), vertex.label=NA)
legend('bottomleft',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
#### SECTION 5: NETWORK PLOT WITH TOPOLOGICAL SORT
## Create and export plot of AOP network with topological sorting
is.dag(AOP) # is.dag() reports TRUE for DAG, FALSE if cycles exist
## Plot network with topological sort
dev.off()
par(mar=c(5,1,5,5)) # Attn: margin sizes may need to be adjusted for plots
plot(AOP, layout=topo.layout(AOP), edge.arrow.size=.25, edge.curved=1, vertex.size=5, edge.width=1.5, edge.color="Gray", vertex.label.degree=0, vertex.label.dist=.75, main=paste(AOP.name," AOP Network - Topological Ordering"), vertex.label=paste(strtrim(V(AOP)$name,35),"...",sep=""))
legend('bottomright',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
## Export plot as JPEG
par(mar=c(5,1,5,5)) # Attn: margin sizes may need to be adjusted for plots
jpeg(filename = paste("AOP_",AOP.name,"_topo_plot_NP.jpeg"),
width = 1000, height = 800, units = "px", pointsize = 12,
quality = 75)
plot(AOP, layout=topo.layout(AOP), edge.arrow.size=.25, edge.curved=1, vertex.size=5, edge.width=1.5, edge.color="Gray", vertex.label.degree=0, vertex.label.dist=.75, main=paste(AOP.name," AOP Network - Topological Sorting"), vertex.label=paste(strtrim(V(AOP)$name,35),"...",sep="") )
legend('bottomright',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
dev.off()
#### Section 4: NETWORK PLOT KED####
## Creates and export plot of AOP network with KED coloring
set.seed(2)
plot(AOP, edge.arrow.size=.25, edge.curved=.1, vertex.size=10, main=paste(AOP.name,"AOP Network"),layout=layout.davidson.harel(AOP), vertex.label.cex=.75, vertex.label=NA, edge.curved=T )
legend('topleft',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
# Set jpeg output attributes
jpeg(filename = paste("AOP_",AOP.name,"_plot.jpeg"),
width = 800, height = 800, units = "px", pointsize = 12,
quality = 75)
set.seed(3)
plot(AOP, edge.arrow.size=.25, edge.curved=.1, vertex.size=10, main=paste(AOP.name,"AOP Network"),layout=layout.davidson.harel(AOP), vertex.label=NA)
legend('bottomleft',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
dev.off()
#### Section 4: NETWORK PLOT KED####
## Creates and export plot of AOP network with KED coloring
set.seed(2)
plot(AOP, edge.arrow.size=.25, edge.curved=.1, vertex.size=10, main=paste(AOP.name,"AOP Network"),layout=layout.davidson.harel(AOP), vertex.label.cex=.75, vertex.label=NA, edge.curved=T )
legend('topleft',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
# Set jpeg output attributes
jpeg(filename = paste("AOP_",AOP.name,"_plot.jpeg"),
width = 800, height = 800, units = "px", pointsize = 12,
quality = 75)
set.seed(3)
plot(AOP, edge.arrow.size=.25, edge.curved=.1, vertex.size=10, main=paste(AOP.name,"AOP Network"),layout=layout.davidson.harel(AOP), vertex.label=NA)
legend('bottomleft',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
dev.off()
#### Section 4: NETWORK PLOT KED ####
## Creates and export plot of AOP network with KED coloring
set.seed(2)
plot(AOP, edge.arrow.size=.25, edge.curved=.1, vertex.size=10, main=paste(AOP.name,"AOP Network"),layout=layout.davidson.harel(AOP), vertex.label.cex=.75, vertex.label=NA, edge.curved=T )
legend('topleft',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
# Set jpeg output attributes
jpeg(filename = paste("AOP_",AOP.name,"_plot.jpeg"),
width = 800, height = 800, units = "px", pointsize = 12,
quality = 75)
set.seed(3)
plot(AOP, edge.arrow.size=.25, edge.curved=.1, vertex.size=10, main=paste(AOP.name,"AOP Network"),layout=layout.davidson.harel(AOP), vertex.label=NA)
legend('bottomleft',c("MIE","KE", "AO"), pch=22,
col="#777777",  pt.bg=c("Green","Yellow","Red"), pt.cex=2, cex=.8, bty="n", ncol=1)
dev.off()
